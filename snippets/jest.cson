'.source.js, .source.jsx, .source.ts, .source.js-semantic':

  'jest.clearAllTimers()':
    prefix: 'jcleartimers'
    body: 'jest.clearAllTimers();'

  'jest.disableAutomock()':
    prefix: 'jdisableautomock'
    body: 'jest.disableAutomock();'

  'jest.enableAutomock()':
    prefix: 'jenableautomock'
    body: 'jest.enableAutomock();'

  'jest.fn()':
    prefix: 'jfn'
    body: 'jest.fn($1);'

  'jest.isMockFunction(fn)':
    prefix: 'jismock'
    body: 'jest.isMockFunction($1);'

  'jest.genMockFromModule(moduleName)':
    prefix: 'jgenmock'
    body: 'jest.genMockFromModule($1);'

  'jest.mock(moduleName, factory, options)':
    prefix: 'jmock'
    body: 'jest.mock($1);'

  'jest.resetAllMocks()':
    prefix: 'jresetallmocks'
    body: 'jest.resetAllMocks();'

  'jest.resetModules()':
    prefix: 'jresetmodules'
    body: 'jest.resetModules();'

  'jest.runAllTicks()':
    prefix: 'jrunticks'
    body: 'jest.runAllTicks();'

  'jest.runAllTimers()':
    prefix: 'jruntimers'
    body: 'jest.runAllTimers();'

  'jest.runOnlyPendingTimers()':
    prefix: 'jrunpendtimers'
    body: 'jest.runOnlyPendingTimers();'

  'jest.setMock(moduleName, moduleExports)':
    prefix: 'jsetmock'
    body: 'jest.setMock($1);'

  'jest.unmock(moduleName)':
    prefix: 'junmock'
    body: 'jest.unmock($1);'

  'jest.useFakeTimers()':
    prefix: 'jfaketimers'
    body: 'jest.useFakeTimers($1);'

  'jest.useRealTimers()':
    prefix: 'jrealtimers'
    body: 'jest.useRealTimers($1);'